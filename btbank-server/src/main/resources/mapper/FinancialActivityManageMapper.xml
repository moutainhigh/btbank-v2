<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.spark.bitrade.repository.mapper.FinancialActivityManageMapper">

    <resultMap id="BaseResultMap" type="com.spark.bitrade.repository.entity.FinancialActivityManage">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="start_time" jdbcType="TIMESTAMP" property="startTime"/>
        <result column="finalize_time" jdbcType="TIMESTAMP" property="finalizeTime"/>
        <result column="release_time" jdbcType="TIMESTAMP" property="releaseTime"/>
        <result column="profit_rate" jdbcType="DECIMAL" property="profitRate"/>
        <result column="total_purchase_nums" jdbcType="INTEGER" property="totalPurchaseNums"/>
        <result column="up_single_purchase" jdbcType="INTEGER" property="upSinglePurchase"/>
        <result column="unit" jdbcType="INTEGER" property="unit"/>
        <result column="per_amount" jdbcType="DECIMAL" property="perAmount"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="creator" jdbcType="BIGINT" property="creator"/>
        <result column="updater" jdbcType="BIGINT" property="updater"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,name,start_time,finalize_time,release_time,profit_rate,total_purchase_nums,up_single_purchase,per_amount,status,description,creator,updater,create_time,update_time
    </sql>
    <select id="getAvailableActivities" parameterType="com.spark.bitrade.api.vo.FinancialActivityManageVo" resultMap="BaseResultMap" >
        SELECT *  FROM  (
        SELECT
        <include refid="Base_Column_List"/> , (TO_DAYS(release_time)-TO_DAYS(finalize_time)) as  lockdays
        FROM
        financial_activity_manage fam
        <where>
             unit = 'BT' and  status IN (1,2,3)
            <if test="type!=null and type == 1">
                AND (TO_SECONDS(release_time)-TO_SECONDS(finalize_time)) <![CDATA[<=]]>  2592000
            </if>

            <if test="type!=null and type == 2">
                AND 2592000 <![CDATA[<]]> (TO_SECONDS(release_time)-TO_SECONDS(finalize_time))
                AND (TO_SECONDS(release_time)-TO_SECONDS(finalize_time))    <![CDATA[<=]]>  15552000
            </if>
            <if test="type!=null and type == 3">
                AND 15552000 <![CDATA[<]]> (TO_SECONDS(release_time)-TO_SECONDS(finalize_time))
            </if>
            <!--<if test="joinids !=null ">  start_time <![CDATA[<=]]> now()  AND  now()  <![CDATA[<=]]> finalize_time   AND-->
                <!--AND id  NOT IN-->
                <!--<foreach collection="joinids" index="index" item="item" open="("-->
                         <!--separator="," close=")">-->
                    <!--#{item}-->
                <!--</foreach>-->
            <!--</if>-->
        </where>
        ) AA
        order by AA.status ,  AA.create_time DESC
    </select>

    <select id="listActivities" resultType="com.spark.bitrade.api.dto.ActivityDTO">
        SELECT
            id,
            (
                CASE
                WHEN now() BETWEEN start_time
                AND finalize_time THEN
                    1
                WHEN now() BETWEEN finalize_time
                AND release_time THEN
                    2
                WHEN now() >= release_time THEN
                    3
                ELSE
                    0
                END
            )  as shouldStatus
        FROM
            financial_activity_manage
        WHERE
            `status` != 3
    </select>

</mapper>